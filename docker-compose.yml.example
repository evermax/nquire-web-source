version: '2'

services:
  nginx:
    image: nginx
    volumes:
     - ./nquire.template:/etc/nginx/conf.d/default.conf
     - ./static/src:/nquire
     - /logs
    ports:
      - "80:80"
      - "443:443"
    links:
      - nquire
      - sentry
      - lrs
    networks:
      - front

  nquire:
    image: dirichlet/glassfish
    volumes:
      - ./glassfish:/gf
      - ./app/target/:/project/
    links:
      - lrs
      - mysql
      - sentry
      - mail
    env_file:
      - mysql.env
      - lrs.env
      - sentry.env
    networks:
      - front
      - back
    entrypoint: /gf/glassfish-start.sh
    command: nquire-it.war

  mysql:
    image: mysql/mysql-server
    env_file: mysql.env
    networks:
      - back
    volumes:
      - mysql_data:/var/lib/mysql
    command: mysqld --sql-mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"

  mail:
    image: tvial/docker-mailserver
    hostname: mail
    domainname: example.com
    # the FQDN will be 'mail.example.com'
    networks:
      - front
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    volumes:
      - ./spamassassin:/tmp/spamassassin/
      - ./postfix:/tmp/postfix/
      - mail_data:/var/mail

  # LRS and dependencies
  lrs:
    image: dirichlet/lrs
    networks:
      - front
      - back
    links:
      - postgres
      - rabbitmq
    env_file:
      - lrs.env
      - psql.env
      - rabbitmq.env

  rabbitmq:
    image: rabbitmq:3.6
    env_file: rabbitmq.env
    privileged: true
    networks:
      - back

  # Sentry and dependencies
  sentry:
    image: slafs/sentry
    networks:
      - front
      - back
    links:
      - redis
      - postgres
    env_file:
      - psql.env
      - sentry.env
    # volumes:
    #   - /tmp/sentry:/data
  #
  # sentry_celery_worker:
  #   image: slafs/sentry
  #   links:
  #     - redis
  #     - postgres
  #   env_file:
  #     - psql.env
  #     - sentry.env
  #   volumes:
  #     - /tmp/sentry:/data
  #   command: celery worker -B

  redis:
    image: redis
    networks:
      - back
  # postgres for both lrs and sentry
  postgres:
    image: postgres
    env_file: psql.env
    networks:
      - back
    volumes:
      - psql_data:/var/lib/postgresql/data/pgdata

volumes:
  psql_data:
    driver: local
  mysql_data:
    driver: local
  mail_data:
    driver: local
networks:
  front:
    driver: bridge
  back:
    driver: bridge
